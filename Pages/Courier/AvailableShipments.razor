@page "/courier/available-shipments"

<h3>Search for available shipments to deliver</h3>

@code {

    [Inject]
    public IShipmentRepository ShipmentRepository { get; set; }

    [Inject]
    public ICourierRepository CourierRepository { get; set; }

    [Inject]
    public IShipmentService ShipmentService { get; set; }

    public IEnumerable<Shipment> UnassignedShipments { get; set; }
    public Courier Courier { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetUnassignedPackages();
    }

    public async Task GetUnassignedPackages()
    {
        UnassignedShipments = ShipmentService.GetUnassigned();
    }

    public async Task AssignPackageToCourier(long shipmentId)
    {
        var shipment = await ShipmentRepository.Shipments.FirstOrDefaultAsync(s => s.Id == shipmentId);
        if (shipment == null)
        {
            return; // Better handling could be implemented in the future.
        }
        if (shipment.CourierId == null)
        {
            Courier.CurrentShipments.Add(shipment);
            await CourierRepository.UpdateAsync(Courier);
        }
    // No handling if false, yet.
    }

}