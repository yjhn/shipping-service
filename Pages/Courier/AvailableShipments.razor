@page "/courier/available-shipments"

<h3>Search for available shipments to deliver</h3>

@code {

    [Inject]
    public ISenderRepository SenderRepository { get; set; }
    [Inject]
    public IPackageRepository PackageRepository { get; set; }
    [Inject]
    public IPostMachineRepository PostMachineRepository { get; set; }
    [Inject]
    public ICourierRepository CourierRepository { get; set; }
    [Inject]
    public IPackageService PackageService { get; set; }
    public IEnumerable<Package> UnassignedPackages { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetUnassignedPackages();
    }

    public async Task GetUnassignedPackages()
    {
        UnassignedPackages = await PackageService.GetUnassignedAsync();
    }

    public async Task AssignPackageToCourier(ulong courierId, ulong packageId)
    {
        var packages = (List<Package>)(await PackageService.GetUnassignedAsync());
        var courier = await CourierRepository.GetAsync(courierId);
        var package = await PackageRepository.GetAsync(packageId);
        if (package == null || courier == null)
        {
            return; // Better handling could be implemented in the future.
        }
        if (packages.Contains(package))
        {
            packages.Add(package);
            courier.CurrentPackages.Add(package);
            await CourierRepository.UpdateAsync(courier.Id, courier);
        }
        // No handling if false, yet.
    }

}
