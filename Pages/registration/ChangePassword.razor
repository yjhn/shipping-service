@page "/account/change-password"
@using System.ComponentModel.DataAnnotations
@inject IAccountService AccountService
<AuthorizeView Context="userContext">
    <Authorized>
        <div class="col-md-8 mx-auto">
            <div class="card" style="margin: auto; max-width: 500px">
                <h3 class="card-header">
                    Change password of user @userContext.User.Identity?.Name
                </h3>
                <div class="card-body">
                    @if (!string.IsNullOrWhiteSpace(_error))
                    {
                        <div class="alert alert-danger">
                            @_error
                        </div>
                    }
                    @if (_success)
                    {
                        <div class="alert-success">Password was changed successfully.</div>
                    }
                    <EditForm Model="@_model" OnValidSubmit="@HandleSubmit">
                        <DataAnnotationsValidator/>
                        <ValidationSummary/>

                        <label class="form-label" for="oldPassword">Old password</label>
                        <InputText type="password" id="oldPassword" @bind-Value="@_model.OldPassword" class="form-control" style="margin-bottom: 1rem;"/>
                        <ValidationMessage For="@(() => _model.OldPassword)"/>

                        <label class="form-label" for="new1">New password</label>
                        <InputText type="password" @bind-Value="@_model.New1" class="form-control" id="new1" style="margin-bottom: 1rem;"/>
                        <ValidationMessage For="@(() => _model.New1)"/>

                        <label class="form-label" for="new2">Confirm new password</label>
                        <InputText type="password" @bind-Value="@_model.New2" class="form-control" id="new2" style="margin-bottom: 1rem;"/>
                        <ValidationMessage For="@(() => _model.New2)"/>

                        <button class="btn btn-primary" type="submit" style="margin-top: .5rem;">Change</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    readonly PasswordChangeModel _model = new();
    string? _error;
    bool _success;

    [CascadingParameter]
    Task<AuthenticationState> authStateTask { get; set; }

    async Task HandleSubmit()
    {
        _success = false;
        var authState = await authStateTask;
        var authUser = authState.User;
        _error = await AccountService.ChangePasswordAsync(_model.OldPassword, _model.New1, authUser.Identity.Name);
        if (_error == null)
        {
            _success = true;
        }
    }


    class PasswordChangeModel
    {
        [Required]
        [RegularExpression(@"^.*(?=.{8,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!*@#$%^&+=_]).*$", ErrorMessage = "Password must be at least 8 characters long, contain at least 1 number, small/capital letter and special symbol")]
        public string OldPassword { get; set; }

        [Required]
        [RegularExpression(@"^.*(?=.{8,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!*@#$%^&+=_]).*$", ErrorMessage = "Password must be at least 8 characters long, contain at least 1 number, small/capital letter and special symbol")]
        public string New1 { get; set; }

        [Required]
        [Compare("New1")]
        public string New2 { get; set; }
    }

}
